#!/bin/bash

# M√≥dulo de interface de usu√°rio
# Este arquivo cont√©m fun√ß√µes para intera√ß√£o com o usu√°rio

# Carregar depend√™ncias
source "$(dirname "${BASH_SOURCE[0]}")/colors.sh"

# Fun√ß√£o para exibir ajuda
show_help() {
    echo -e "${GREEN}GitUpdate System - Sistema de Atualiza√ß√£o de Reposit√≥rios Git${RESET}"
    echo ""
    echo -e "${YELLOW}Uso:${RESET} $0 [diret√≥rio_raiz] [op√ß√µes]"
    echo ""
    echo -e "${YELLOW}Op√ß√µes:${RESET}"
    echo -e "  ${CYAN}-d, --debug${RESET}              Ativa o modo de depura√ß√£o"
    echo -e "  ${CYAN}-L, --follow-symlinks${RESET}    Segue links simb√≥licos ao procurar reposit√≥rios Git"
    echo -e "  ${CYAN}-a, --allow-auth${RESET}         Permite solicita√ß√£o de credenciais para reposit√≥rios protegidos"
    echo -e "  ${CYAN}-f, --force${RESET}              For√ßa o pull mesmo se houver diverg√™ncias (git pull --force)"
    echo -e "  ${CYAN}-h, --help${RESET}               Exibe esta mensagem de ajuda"
    echo ""
    echo -e "${YELLOW}Exemplos:${RESET}"
    echo -e "  ${GREEN}$0 ~/Projetos -L -d${RESET}      Atualiza reposit√≥rios em ~/Projetos, seguindo links simb√≥licos e com depura√ß√£o"
    echo -e "  ${GREEN}$0 ~/Projetos -a${RESET}         Atualiza reposit√≥rios em ~/Projetos, permitindo solicita√ß√£o de senha"
    echo -e "  ${GREEN}$0 -f${RESET}                    For√ßa atualiza√ß√£o no diret√≥rio atual"
    echo ""
    echo -e "${YELLOW}Descri√ß√£o:${RESET}"
    echo -e "  Este sistema modular atualiza automaticamente todos os reposit√≥rios Git encontrados"
    echo -e "  no diret√≥rio especificado. Por padr√£o, evita solicita√ß√µes de senha e segue apenas"
    echo -e "  as branches principais (master, main, develop)."
    echo ""
    exit 0
}

# Fun√ß√£o para mostrar o cabe√ßalho do sistema
show_header() {
    echo -e "${GREEN}========================================${RESET}"
    echo -e "${GREEN} GitUpdate System v2.0 - Modular${RESET}"
    echo -e "${GREEN}========================================${RESET}"
    echo ""
}

# Fun√ß√£o para mostrar o resumo da execu√ß√£o
show_summary() {
    local total_repos="$1"
    local updated_repos="$2"
    local failed_repos="$3"
    
    echo ""
    echo -e "${GREEN}===== RESUMO DA EXECU√á√ÉO =====${RESET}"
    log "Total de reposit√≥rios encontrados: $total_repos"
    log "Reposit√≥rios atualizados com sucesso: $updated_repos"
    
    if [ "$failed_repos" -gt 0 ]; then
        aviso_log "Reposit√≥rios com problemas: $failed_repos"
    else
        sucesso_log "‚úì Conclu√≠do com sucesso! Todos os reposit√≥rios foram atualizados."
    fi
    
    # Mostrar onde o log foi salvo
    if [ -n "${LOG_FILE:-}" ]; then
        echo ""
        echo -e "${CYAN}üìù Log detalhado salvo em: $LOG_FILE${RESET}"
        echo -e "${CYAN}üí° Use 'cat \"$LOG_FILE\"' para ver detalhes completos${RESET}"
    fi
}

# Fun√ß√£o para aguardar entrada do usu√°rio
wait_for_user() {
    echo ""
    read -r -p "Pressione [Enter] para continuar..."
}
